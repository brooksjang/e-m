<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.em.dao.EmployeeDao">
    <resultMap id="BaseResultMap" type="com.example.em.pojo.EmployeeVO">
        <result column="e_id" jdbcType="BIGINT" property="eId" />
        <result column="e_last_name" jdbcType="VARCHAR" property="eLastName" />
        <result column="e_gender" jdbcType="INTEGER" property="eGender" />
        <result column="e_email" jdbcType="VARCHAR" property="eEmail" />
        <result column="e_d_id" jdbcType="BIGINT" property="eDId" />
        <result column="e_crt_time" jdbcType="TIMESTAMP" property="eCrtTime" />
        <result column="d_id" jdbcType="BIGINT" property="dId" />
        <result column="d_name" jdbcType="VARCHAR" property="dName" />
    </resultMap>

    <sql id="Base_Column_List">
        e_id,e_last_name,e_gender,e_email,e_d_id,e_crt_time
    </sql>

    <!--查询所有员工信息-->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT
	      em.*, de.d_name
        FROM
	      employee em
        LEFT JOIN department de ON em.e_d_id = de.d_id
    </select>

    <!--根据主键查询单个员工的信息-->
    <select id="getInfoByEId" resultMap="BaseResultMap">
        SELECT
	      em.*, de.d_name
        FROM
	      employee em
        LEFT JOIN department de ON em.e_d_id = de.d_id
        WHERE
          e_id = #{eId}
    </select>

    <!--获取所有部门-->
    <select id="getAllDepartment" resultMap="BaseResultMap">
        select
          d_id,
          d_name
        from
          department
    </select>

    <!--新增员工-->
    <insert id="addEmployee" parameterType="com.example.em.pojo.EmployeeVO">
        INSERT INTO employee (
	      e_last_name,
	      e_gender,
	      e_email,
	      e_d_id,
	      e_crt_time
        )
      VALUES
	    (
		#{eLastName},
		#{eGender},
		#{eEmail},
		#{eDId},
		#{eCrtTime}
	    )
    </insert>

    <!--根据主键修改员工信息-->
    <update id="updateEmployeeByEId" parameterType="com.example.em.pojo.EmployeeVO">
        update employee
        <set>
            <if test="eLastName != null and eLastName !=''">
                e_last_name = #{eLastName, jdbcType=VARCHAR},
            </if>
            <if test="eGender != null">
                e_gender = #{eGender, jdbcType=INTEGER},
            </if>
            <if test="eEmail != null and eEmail !=''">
                e_email = #{eEmail, jdbcType=VARCHAR},
            </if>
            <if test="eDId != null and eDId !=''">
                e_d_id = #{eDId, jdbcType=BIGINT}
            </if>
        </set>
        <where>
            e_id = #{eId, jdbcType=BIGINT}
        </where>
    </update>

    <!--删除员工-->
    <delete id="delEmployee" parameterType="java.lang.Long">
        delete from employee where e_id = #{eId, jdbcType=BIGINT}
    </delete>
</mapper>